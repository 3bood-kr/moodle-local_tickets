{"version":3,"sources":["../src/modalforms.js"],"names":["addNotification","msg","type","modalForm","linkSelector","formClass","title","args","hidebuttons","document","querySelector","addEventListener","e","preventDefault","form","ModalForm","modalConfig","returnFocus","currentTarget","events","FORM_SUBMITTED","response","detail","status","message","ERROR","show","changeStatusModalForms","elements","querySelectorAll","forEach","element","ticketId","dataset","id","location","reload"],"mappings":"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","sourcesContent":["import ModalForm from 'core_form/modalform';\nimport {add as addToast} from 'core/toast';\n\nconst addNotification = (msg, type) => {\n    addToast(msg, {type: type});\n};\n\nexport const modalForm = (linkSelector, formClass, title, args = {...args, hidebuttons: args.hidebuttons ?? 1}) => {\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\n        e.preventDefault();\n        const form = new ModalForm({\n            formClass,\n            args: args,\n            modalConfig: {title: title},\n            returnFocus: e.currentTarget\n        });\n        form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n            // Comes from process_dynamic_submission() in submitticketform.php\n            const response = e.detail;\n            const type = response.status == 200 ? 'success' : 'danger';\n            addNotification(response.message, type);\n        });\n        form.addEventListener(form.events.ERROR, (e) => addNotification('Oopsie - ' + e.detail.message));\n        form.show();\n    });\n\n};\n\nexport const changeStatusModalForms = (linkSelector, formClass, args = {...args, hidebuttons: args.hidebuttons ?? 1}) => {\n    const elements = document.querySelectorAll(linkSelector);\n    // Attach a click event listener to each element.\n    elements.forEach(element => {\n        element.addEventListener('click', (e) => {\n            e.preventDefault();\n            const ticketId = element.dataset.ticketId;\n            const form = new ModalForm({\n                formClass,\n                args: {...args, id: ticketId},\n                modalConfig: {title: 'Edit Status'},\n                returnFocus: e.currentTarget\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n                const response = e.detail;\n                let type;\n                if(response.status == 200){\n                    type = 'success';\n                    location.reload();\n                } else {\n                    type = 'danger';\n                }\n                addNotification(response.message, type);\n\n            });\n            form.addEventListener(form.events.ERROR, (e) => {\n                addNotification('Oopsie - ' + e.detail.message);\n            });\n            form.show();\n        });\n    });\n};"],"file":"modalforms.min.js"}