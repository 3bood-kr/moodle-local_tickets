{"version":3,"file":"modalforms.min.js","sources":["../src/modalforms.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport {add as addToast} from 'core/toast';\n\nconst addNotification = (msg, type) => {\n    addToast(msg, {type: type});\n};\n\nexport const modalForm = (linkSelector, formClass, title, args = {...args, hidebuttons: args.hidebuttons ?? 1}) => {\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\n        e.preventDefault();\n        const form = new ModalForm({\n            formClass,\n            args: args,\n            modalConfig: {title: title},\n            returnFocus: e.currentTarget\n        });\n        form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n            // Comes from process_dynamic_submission() in submitticketform.php\n            const response = e.detail;\n            const type = response.status == 200 ? 'success' : 'danger';\n            addNotification(response.message, type);\n        });\n        form.addEventListener(form.events.ERROR, (e) => addNotification('Oopsie - ' + e.detail.message));\n        form.show();\n    });\n\n};\n\nexport const changeStatusModalForms = (linkSelector, formClass, args = {...args, hidebuttons: args.hidebuttons ?? 1}) => {\n    const elements = document.querySelectorAll(linkSelector);\n    // Attach a click event listener to each element.\n    elements.forEach(element => {\n        element.addEventListener('click', (e) => {\n            e.preventDefault();\n            const ticketId = element.dataset.ticketId;\n            const form = new ModalForm({\n                formClass,\n                args: {...args, id: ticketId},\n                modalConfig: {title: 'Edit Status'},\n                returnFocus: e.currentTarget\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n                const response = e.detail;\n                let type;\n                if(response.status == 200){\n                    type = 'success';\n                    location.reload();\n                } else {\n                    type = 'danger';\n                }\n                addNotification(response.message, type);\n\n            });\n            form.addEventListener(form.events.ERROR, (e) => {\n                addNotification('Oopsie - ' + e.detail.message);\n            });\n            form.show();\n        });\n    });\n};"],"names":["addNotification","msg","type","linkSelector","formClass","title","args","hidebuttons","document","querySelector","addEventListener","e","preventDefault","form","ModalForm","modalConfig","returnFocus","currentTarget","events","FORM_SUBMITTED","response","detail","status","message","ERROR","show","elements","querySelectorAll","forEach","element","ticketId","dataset","id","location","reload"],"mappings":"qTAGMA,gBAAkB,CAACC,IAAKC,uBACjBD,IAAK,CAACC,KAAMA,2BAGA,SAACC,aAAcC,UAAWC,iCAAOC,4DAAO,IAAIA,KAAMC,sCAAaD,KAAKC,2DAAe,GACxGC,SAASC,cAAcN,cAAcO,iBAAiB,SAAUC,IAC5DA,EAAEC,uBACIC,KAAO,IAAIC,mBAAU,CACvBV,UAAAA,UACAE,KAAMA,KACNS,YAAa,CAACV,MAAOA,OACrBW,YAAaL,EAAEM,gBAEnBJ,KAAKH,iBAAiBG,KAAKK,OAAOC,gBAAiBR,UAEzCS,SAAWT,EAAEU,OACbnB,KAA0B,KAAnBkB,SAASE,OAAgB,UAAY,SAClDtB,gBAAgBoB,SAASG,QAASrB,SAEtCW,KAAKH,iBAAiBG,KAAKK,OAAOM,OAAQb,GAAMX,gBAAgB,YAAcW,EAAEU,OAAOE,WACvFV,KAAKY,2CAKyB,SAACtB,aAAcC,sCAAWE,4DAAO,IAAIA,KAAMC,uCAAaD,KAAKC,6DAAe,SACxGmB,SAAWlB,SAASmB,iBAAiBxB,cAE3CuB,SAASE,SAAQC,UACbA,QAAQnB,iBAAiB,SAAUC,IAC/BA,EAAEC,uBACIkB,SAAWD,QAAQE,QAAQD,SAC3BjB,KAAO,IAAIC,mBAAU,CACvBV,UAAAA,UACAE,KAAM,IAAIA,KAAM0B,GAAIF,UACpBf,YAAa,CAACV,MAAO,eACrBW,YAAaL,EAAEM,gBAEnBJ,KAAKH,iBAAiBG,KAAKK,OAAOC,gBAAiBR,UACzCS,SAAWT,EAAEU,WACfnB,KACkB,KAAnBkB,SAASE,QACRpB,KAAO,UACP+B,SAASC,UAEThC,KAAO,SAEXF,gBAAgBoB,SAASG,QAASrB,SAGtCW,KAAKH,iBAAiBG,KAAKK,OAAOM,OAAQb,IACtCX,gBAAgB,YAAcW,EAAEU,OAAOE,YAE3CV,KAAKY"}