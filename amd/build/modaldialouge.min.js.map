{"version":3,"file":"modaldialouge.min.js","sources":["../src/modaldialouge.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\r\nimport {call as ajaxCall} from 'core/ajax';\r\nimport Templates from 'core/templates';\r\nimport fragment from 'core/fragment';\r\nimport {add as addToast} from 'core/toast';\r\nimport {get_string as getString} from 'core/str';\r\n\r\nconst addNotification = (msg, type) => {\r\n    addToast(msg, {type: type});\r\n};\r\n\r\nexport const init = (linkSelector, title, own = true) => {\r\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        var filterForm = '';\r\n        fragment.loadFragment('local_tickets', 'new_filter_form', M.cfg.contextid, {})\r\n                .done(function(html, js) {\r\n                    filterForm = html;\r\n                })\r\n                .fail(function(ex) {\r\n                    // Handle errors here\r\n                    console.error('Failed to load fragment:', ex);\r\n                });\r\n\r\n        ajaxCall([{\r\n            methodname: 'local_tickets_get_tickets', \r\n            args: {'own': own},\r\n            done: async function(response) {\r\n                if(response.status == 200){\r\n                    const tickets = JSON.parse(response.data);\r\n                    const modal = await ModalFactory.create({\r\n                        large: true,\r\n                        title: title,\r\n                        body: Templates.render('local_tickets/modaldialouge', {tickets: tickets, filterform: filterForm}),\r\n                    });\r\n                    require(['local_tickets/deletepopup'], function(deletepopup) {\r\n                        deletepopup.init();\r\n                    });\r\n                    modal.show();\r\n                }\r\n                else{\r\n                    addNotification(response.message, 'danger');\r\n                }\r\n            },\r\n            fail: function(ex) {\r\n                addNotification(`Failed to fetch ticket: ${ex}`, 'danger');\r\n            }\r\n        }])\r\n    });\r\n};\r\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal_factory","_templates","_fragment","addNotification","msg","type","addToast","_exports","init","linkSelector","title","own","arguments","length","undefined","document","querySelector","addEventListener","preventDefault","filterForm","fragment","loadFragment","M","cfg","contextid","done","html","js","fail","ex","console","error","ajaxCall","methodname","args","async","response","status","tickets","JSON","parse","data","modal","ModalFactory","create","large","body","Templates","render","filterform","require","deletepopup","show","message"],"mappings":"qNAGqC,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA,8EAHrCG,eAAAJ,uBAAAI,gBAEAC,WAAAL,uBAAAK,YACAC,UAAAN,uBAAAM,WAIA,MAAMC,gBAAkBA,CAACC,IAAKC,SAC1B,EAAAC,OAAAA,KAASF,IAAK,CAACC,KAAMA,MAAM,EAyC7BE,SAAAC,KAtCkB,SAACC,aAAcC,OAAsB,IAAfC,MAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACzCG,SAASC,cAAcP,cAAcQ,iBAAiB,SAAUpB,IAC5DA,EAAEqB,iBACF,IAAIC,WAAa,GACjBC,UAAQrB,QAACsB,aAAa,gBAAiB,kBAAmBC,EAAEC,IAAIC,UAAW,CAAA,GAClEC,MAAK,SAASC,KAAMC,IACjBR,WAAaO,IACjB,IACCE,MAAK,SAASC,IAEXC,QAAQC,MAAM,2BAA4BF,GAC9C,KAER,EAAAG,MAAAA,MAAS,CAAC,CACNC,WAAY,4BACZC,KAAM,CAACvB,IAAOA,KACdc,KAAMU,eAAeC,UACjB,GAAsB,KAAnBA,SAASC,OAAc,CACtB,MAAMC,QAAUC,KAAKC,MAAMJ,SAASK,MAC9BC,YAAcC,eAAY5C,QAAC6C,OAAO,CACpCC,OAAO,EACPnC,MAAOA,MACPoC,KAAMC,WAAShD,QAACiD,OAAO,8BAA+B,CAACV,QAASA,QAASW,WAAY9B,eAEzF+B,QAAQ,CAAC,8BAA8B,SAASC,aAC5CA,YAAY3C,MAChB,IACAkC,MAAMU,MACV,MAEIjD,gBAAgBiC,SAASiB,QAAS,SAEzC,EACDzB,KAAM,SAASC,IACX1B,gBAAgB,2BAA2B0B,KAAM,SACrD,IACD,IAET"}