{"version":3,"sources":["../src/modaldialouge.js"],"names":["addNotification","msg","type","init","linkSelector","title","own","document","querySelector","addEventListener","e","preventDefault","methodname","args","done","response","status","tickets","JSON","parse","data","ModalFactory","create","large","body","Templates","render","modal","require","deletepopup","show","message","fail","ex","console","log"],"mappings":"4NAAA,OAEA,O,qXAIMA,CAAAA,CAAe,CAAG,SAACC,CAAD,CAAMC,CAAN,CAAe,CACnC,UAASD,CAAT,CAAc,CAACC,IAAI,CAAEA,CAAP,CAAd,CACH,C,QAEmB,QAAPC,CAAAA,IAAO,CAACC,CAAD,CAAeC,CAAf,CAAqC,IAAfC,CAAAA,CAAe,2DACrDC,QAAQ,CAACC,aAAT,CAAuBJ,CAAvB,EAAqCK,gBAArC,CAAsD,OAAtD,CAA+D,SAACC,CAAD,CAAO,CAClEA,CAAC,CAACC,cAAF,GACA,WAAS,CAAC,CACNC,UAAU,CAAE,2BADN,CAENC,IAAI,CAAE,CAAC,IAAOP,CAAR,CAFA,CAGNQ,IAAI,4CAAE,WAAeC,CAAf,gGACoB,GAAnB,EAAAA,CAAQ,CAACC,MADV,kBAEQC,CAFR,CAEkBC,IAAI,CAACC,KAAL,CAAWJ,CAAQ,CAACK,IAApB,CAFlB,gBAGsBC,WAAaC,MAAb,CAAoB,CACpCC,KAAK,GAD+B,CAEpClB,KAAK,CAAEA,CAF6B,CAGpCmB,IAAI,CAAEC,UAAUC,MAAV,CAAiB,6BAAjB,CAAgD,CAACT,OAAO,CAAEA,CAAV,CAAhD,CAH8B,CAApB,CAHtB,QAGQU,CAHR,QASEC,OAAO,CAAC,CAAC,2BAAD,CAAD,CAAgC,SAASC,CAAT,CAAsB,CACzDA,CAAW,CAAC1B,IAAZ,EACH,CAFM,CAAP,CAIAwB,CAAK,CAACG,IAAN,GAbF,uBAgBE9B,CAAe,CAACe,CAAQ,CAACgB,OAAV,CAAmB,QAAnB,CAAf,CAhBF,yCAAF,4DAHE,CAsBNC,IAAI,CAAE,cAASC,CAAT,CAAa,CACfjC,CAAe,mCAA4BiC,CAA5B,EAAkC,QAAlC,CAAf,CACAC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CACH,CAzBK,CAAD,CAAT,CA2BH,CA7BD,CA8BH,C","sourcesContent":["import ModalFactory from 'core/modal_factory';\r\nimport {call as ajaxCall} from 'core/ajax';\r\nimport Templates from 'core/templates';\r\nimport {add as addToast} from 'core/toast';\r\nimport {get_string as getString} from 'core/str';\r\n\r\nconst addNotification = (msg, type) => {\r\n    addToast(msg, {type: type});\r\n};\r\n\r\nexport const init = (linkSelector, title, own = true) => {\r\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        ajaxCall([{\r\n            methodname: 'local_tickets_get_tickets', \r\n            args: {'own': own},\r\n            done: async function(response) {\r\n                if(response.status == 200){\r\n                    const tickets = JSON.parse(response.data);\r\n                    const modal = await ModalFactory.create({\r\n                        large: true,\r\n                        title: title,\r\n                        body: Templates.render('local_tickets/modaldialouge', {tickets: tickets}),\r\n                    });\r\n                    \r\n                    require(['local_tickets/deletepopup'], function(deletepopup) {\r\n                        deletepopup.init();\r\n                    });\r\n\r\n                    modal.show();\r\n                }\r\n                else{\r\n                    addNotification(response.message, 'danger');\r\n                }\r\n            },\r\n            fail: function(ex) {\r\n                addNotification(`Failed to fetch ticket: ${ex}`, 'danger');\r\n                console.log(ex);\r\n            }\r\n        }])\r\n    });\r\n};\r\n"],"file":"modaldialouge.min.js"}